name: Run Tests

on: [push]

jobs:
  test:
    strategy:
      matrix:
        python: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest]
        exclude:
          # just test lowest and highest python version on windows
          - os: windows-latest
            python: "3.8"
          - os: windows-latest
            python: "3.9"
          - os: windows-latest
            python: "3.10"
      fail-fast: false
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Set up Bash (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "C:\Program Files\Git\bin\bash.exe" > $GITHUB_PATH
        shell: bash
      - name: set up Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.3.1"
      - name: install dependencies
        run: |
          poetry config virtualenvs.create false
          poetry install
          # install packages to run the examples
          pip install opencv-python opencv-contrib-python-headless httpx replicate
          # try fix issue with importlib_resources
          pip install importlib-resources
      - name: test startup
        run: ./test_startup.sh
        shell: bash
      - name: setup chromedriver
        uses: nanasess/setup-chromedriver@v1
      - name: pytest
        run: pytest
        shell: bash
      - name: upload screenshots
        uses: actions/upload-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: pytest-screenshots
          path: tests/screenshots

  slack:
    needs:
      - test
    if: always() # also execute when test fails
    runs-on: ubuntu-latest
    steps:
      - name: Determine if we need to notify
        uses: Jimdo/should-i-notify-action@main
        id: should_notify
        with:
          needs_context: ${{ toJson(needs) }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Slack workflow notification
        if: steps.should_notify.outputs.should_send_message == 'yes'
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_ROBOTICS_CI_WEBHOOK }}
          channel: "robotik-ci"
          name: "NiceGUI"
